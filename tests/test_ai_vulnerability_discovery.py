import pytest
from ai_vulnerability_discovery import AIVulnerabilityDiscovery, VulnerabilityPattern


def test_fstring_sql_injection_is_found():
    """
    Tests that the fixed engine correctly detects SQL injection in f-strings.
    This test will fail until the fix is implemented.
    """
    vulnerable_code = """
import sqlite3

def get_user(user_id: str):
    conn = sqlite3.connect(":memory:")
    cursor = conn.cursor()
    query = f"SELECT * FROM users WHERE id = '{user_id}'"
    cursor.execute(query)
    return cursor.fetchone()
"""
    engine = AIVulnerabilityDiscovery()
    results = engine.discover_vulnerabilities(vulnerable_code)

    assert results["summary"]["total_vulnerabilities"] == 1
    sql_injection_vuln = results["static_analysis"][0]
    assert sql_injection_vuln["pattern"] == VulnerabilityPattern.SQL_INJECTION.value
    assert sql_injection_vuln["severity"] == "critical"
